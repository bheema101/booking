<configuration>
    <property name="LOG_FILE" value="${LOG_FILE:-logs/dog.log}" />
    <property name="LOG_PATTERN" value="${LOG_PATTERN:-%d{yyyy-MM-dd HH:mm:ss} [%X{user}] [%thread] %-1level %logger{36} - %msg%n}" />

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder><pattern>${LOG_PATTERN}</pattern></encoder>
    </appender>
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoder> <pattern>${LOG_PATTERN}</pattern> </encoder>
        <file>${LOG_FILE}</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${LOG_FILE}.%i</fileNamePattern>
        </rollingPolicy>
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>10MB</MaxFileSize>
        </triggeringPolicy>
    </appender>

    <!--Next two can be changed to TRACE to see what values Hibernate uses when executing queries-->
    <!--<logger name="org.hibernate.type.descriptor.sql.BasicBinder" level="DEBUG"/>-->
    <!--<logger name="org.hibernate.type.EnumType" level="DEBUG"/>-->

    <logger name="org.springframework" level="INFO" />
    <!--Outputs info about which config file is used and which profiles are activated. Important stuff.-->
    <logger name="org.springframework.boot.context.config" level="DEBUG"/>
    <!--There are issues with serializing Spring MVC errors when we work with ELN XML media type - it silently cannot
     serialize it. This allows at least to show the error in logs (as a temp solution).-->
    <logger name="org.apache.catalina.startup.DigesterFactory" level="WARN" />
    <logger name="com.hotel.booking" level="INFO" />

    <root level="INFO">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="FILE" />
    </root>
</configuration>